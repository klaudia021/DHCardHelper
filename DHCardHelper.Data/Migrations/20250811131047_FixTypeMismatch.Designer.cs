// <auto-generated />
using DHCardHelper.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DHCardHelper.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250811131047_FixTypeMismatch")]
    partial class FixTypeMismatch
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DHCardHelper.Models.Entities.BackgroundCardType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BackgroundCardTypes", (string)null);
                });

            modelBuilder.Entity("DHCardHelper.Models.Entities.Cards.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BackgroundTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CardType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int?>("CharacterClassId")
                        .HasColumnType("int");

                    b.Property<int?>("DomainCardTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("DomainId")
                        .HasColumnType("int");

                    b.Property<string>("Feature")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BackgroundTypeId");

                    b.HasIndex("CharacterClassId");

                    b.HasIndex("DomainCardTypeId");

                    b.HasIndex("DomainId");

                    b.ToTable("Cards");

                    b.HasDiscriminator<string>("CardType").HasValue("Card");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("DHCardHelper.Models.Entities.CharacterClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CharacterClasses", (string)null);
                });

            modelBuilder.Entity("DHCardHelper.Models.Entities.Domain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Domains", (string)null);
                });

            modelBuilder.Entity("DHCardHelper.Models.Entities.DomainCardType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DomainCardTypes", (string)null);
                });

            modelBuilder.Entity("DHCardHelper.Models.Entities.Cards.BackgroundCard", b =>
                {
                    b.HasBaseType("DHCardHelper.Models.Entities.Cards.Card");

                    b.Property<string>("Desciption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Background");
                });

            modelBuilder.Entity("DHCardHelper.Models.Entities.Cards.DomainCard", b =>
                {
                    b.HasBaseType("DHCardHelper.Models.Entities.Cards.Card");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("RecallCost")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Domain");
                });

            modelBuilder.Entity("DHCardHelper.Models.Entities.Cards.SubclassCard", b =>
                {
                    b.HasBaseType("DHCardHelper.Models.Entities.Cards.Card");

                    b.Property<string>("MasteryType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Subclass");
                });

            modelBuilder.Entity("DHCardHelper.Models.Entities.Cards.Card", b =>
                {
                    b.HasOne("DHCardHelper.Models.Entities.BackgroundCardType", "BackgroundType")
                        .WithMany()
                        .HasForeignKey("BackgroundTypeId");

                    b.HasOne("DHCardHelper.Models.Entities.CharacterClass", "CharacterClass")
                        .WithMany()
                        .HasForeignKey("CharacterClassId");

                    b.HasOne("DHCardHelper.Models.Entities.DomainCardType", "DomainCardType")
                        .WithMany()
                        .HasForeignKey("DomainCardTypeId");

                    b.HasOne("DHCardHelper.Models.Entities.Domain", "Domain")
                        .WithMany()
                        .HasForeignKey("DomainId");

                    b.Navigation("BackgroundType");

                    b.Navigation("CharacterClass");

                    b.Navigation("Domain");

                    b.Navigation("DomainCardType");
                });
#pragma warning restore 612, 618
        }
    }
}
